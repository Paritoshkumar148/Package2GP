version: 2.1

executors:
  salesforce-executor:
    docker:
      - image: node:18 # Use a stable Node.js version
    working_directory: ~/project

jobs:
  setup-scratch-org:
    executor: salesforce-executor
    steps:
      - checkout

      # Install the new Salesforce CLI correctly
      - run:
          name: "Install Salesforce CLI"
          command: |
            npm install --global @salesforce/cli
            echo 'export PATH=~/.npm-global/bin:$PATH' >> $BASH_ENV
            echo 'export PATH=~/.local/share/sf/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
            sf update
            sf --version  # Validate installation

      # Authenticate using the SFDX_URL from CircleCI Environment Variables
      - run:
          name: "Authenticate with Salesforce"
          command: |
            echo $SF_AUTH_URL > sfdx_auth.txt
            sf org login sfdx-url --sfdx-url-file sfdx_auth.txt --set-default-dev-hub
            sf org list

      # Create a new Scratch Org
      - run:
          name: "Create Scratch Org"
          command: sf org create scratch --definition-file config/project-scratch-def.json --set-default --duration-days 1 --alias ScratchOrg

      # Push metadata to Scratch Org
      - run:
          name: "Push Source to Scratch Org"
          command: sf project deploy start --source-dir force-app

      # Run Apex tests with Code Coverage
      - run:
          name: "Run Apex Tests"
          command: sf apex run test --code-coverage --result-format human

      # Create a package (if not already created)
      - run:
          name: "Create Unlocked Package"
          command: |
            PACKAGE_NAME="MyPackage"
            PACKAGE_TYPE="Unlocked"
            EXISTING_PACKAGE=$(sf package list --json | jq -r --arg name "$PACKAGE_NAME" '.result[] | select(.Name==$name) | .Id')
            if [ -z "$EXISTING_PACKAGE" ]; then
              sf package create --name "$PACKAGE_NAME" --type "$PACKAGE_TYPE" --path force-app --package-manager npm
            else
              echo "Package already exists: $EXISTING_PACKAGE"
            fi

      # Create a new package version
      - run:
          name: "Create Package Version"
          command: |
            PACKAGE_ID=$(sf package list --json | jq -r '.result[0].Id')
            sf package version create --package "$PACKAGE_ID" --installation-key-bypass --wait 10 --code-coverage

      # Install the package in Scratch Org
      - run:
          name: "Install Package in Scratch Org"
          command: |
            PACKAGE_VERSION_ID=$(sf package version list --json | jq -r '.result[0].SubscriberPackageVersionId')
            sf package install --package "$PACKAGE_VERSION_ID" --target-org ScratchOrg --wait 10 --publish-wait 10 --no-prompt

      # Delete the Scratch Org after tests (Cleanup)
      - run:
          name: "Delete Scratch Org"
          command: sf org delete scratch --target-org ScratchOrg --no-prompt

workflows:
  version: 2
  ci_pipeline:
    jobs:
      - setup-scratch-org
