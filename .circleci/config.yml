version: 2.1

executors:
  salesforce-executor:
    docker:
      - image: node:18 # Use a stable Node.js version
    working_directory: ~/project

jobs:
  setup-scratch-org:
    executor: salesforce-executor
    steps:
      - checkout

      # Install Salesforce CLI correctly
      - run:
          name: "Install Salesforce CLI"
          command: |
            npm install --global @salesforce/cli
            echo 'export PATH=~/.npm-global/bin:$PATH' >> $BASH_ENV
            echo 'export PATH=~/.local/share/sf/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
            sf update
            sf --version  # Validate installation

      # Authenticate using the SFDX_URL from CircleCI Environment Variables
      - run:
          name: "Authenticate with Salesforce"
          command: |
            echo $SF_AUTH_URL > sfdx_auth.txt
            sf org login sfdx-url --sfdx-url-file sfdx_auth.txt --set-default-dev-hub
            sf org list

      # Create a new Scratch Org
      - run:
          name: "Create Scratch Org"
          command: sf org create scratch --definition-file config/project-scratch-def.json --set-default --duration-days 1 --alias ScratchOrg

      # Push metadata to Scratch Org
      - run:
          name: "Push Source to Scratch Org"
          command: sf project deploy start --source-dir force-app

      # Run Apex tests with Code Coverage
      - run:
          name: "Run Apex Tests"
          command: sf apex run test --code-coverage --result-format human

      # Fetch or Create Package Dynamically
      - run:
          name: "Fetch or Create 2GP Package"
          command: |
            PACKAGE_NAME="MySalesforcePackage"  # Replace with your package name
            PACKAGE_TYPE="Managed"  # Change to "Unlocked" if needed

            # Try fetching an existing package ID
            PACKAGE_ID=$(sf package list --json | jq -r --arg NAME "$PACKAGE_NAME" '.result[] | select(.Name == $NAME) | .Id')

            # If the package doesn't exist, create it12345
            if [ -z "$PACKAGE_ID" ]; then
              echo "Package does not exist. Creating..."
              PACKAGE_ID=$(sf package create --name "$PACKAGE_NAME" --description "2GP package for deployment" --package-type "$PACKAGE_TYPE" --path force-app --target-dev-hub ScratchOrg --json | jq -r '.result.Id')
            fi

            echo "Using Package ID: $PACKAGE_ID"
            echo "export PACKAGE_ID=$PACKAGE_ID" >> $BASH_ENV

      # Create a new package version dynamically
      - run:
          name: "Create 2GP Package Version"
          command: |
            source $BASH_ENV
            PACKAGE_VERSION_ID=$(sf package version create --package $PACKAGE_ID --installation-key-bypass --wait 10 --json | jq -r '.result.SubscriberPackageVersionId')

            echo "Package Version ID: $PACKAGE_VERSION_ID"
            echo "export PACKAGE_VERSION_ID=$PACKAGE_VERSION_ID" >> $BASH_ENV

      # Delete the Scratch Org after tests (Cleanup)1324567
      - run:
          name: "Delete Scratch Org"
          command: sf org delete scratch --target-org ScratchOrg --no-prompt

workflows:
  version: 2
  ci_pipeline:
    jobs:
      - setup-scratch-org
