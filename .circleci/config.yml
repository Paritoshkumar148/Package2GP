version: 2.1

executors:
  sf-executor:
    docker:
      - image: salesforce/salesforcedx:latest
    working_directory: ~/project

jobs:
  setup:
    executor: sf-executor
    steps:
      - checkout
      - run:
          name: Authenticate Dev Hub
          command: |
            echo $SFDX_AUTH_URL > auth.jwt
            sf auth jwt grant --client-id $SF_CONSUMER_KEY --jwt-key-file auth.jwt --username $SF_DEV_HUB_USERNAME --set-default-dev-hub
      - run:
          name: Create Scratch Org
          command: sf org create scratch --definition-file config/project-scratch-def.json --set-default --duration-days 1
      - persist_to_workspace:
          root: ~/project
          paths: .

  deploy-metadata:
    executor: sf-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Push Source to Scratch Org
          command: sf project deploy start --source-dir force-app
      - persist_to_workspace:
          root: ~/project
          paths: .

  run-tests:
    executor: sf-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Run Apex Tests
          command: sf apex run test --wait 10 --result-format human
      - persist_to_workspace:
          root: ~/project
          paths: .

  create-package:
    executor: sf-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Create Package Version
          command: |
            PACKAGE_VERSION=$(sf package version create --package $SF_PACKAGE_NAME --installation-key-bypass --wait 10 --json | jq -r '.result.SubscriberPackageVersionId')
            echo "export PACKAGE_VERSION=$PACKAGE_VERSION" >> $BASH_ENV
      - run:
          name: Install Package in Scratch Org
          command: sf package install --package $PACKAGE_VERSION --wait 10 --publish-wait 10 --target-org=myscratchorg
      - persist_to_workspace:
          root: ~/project
          paths: .

workflows:
  version: 2
  deploy:
    jobs:
      - setup
      - deploy-metadata:
          requires:
            - setup
      - run-tests:
          requires:
            - deploy-metadata
      - create-package:
          requires:
            - run-tests
